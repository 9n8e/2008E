void __thiscall RBX::ServiceProvider::ServiceProvider(RBX::ServiceProvider *this)
{
  std::_Tree_nod<std::_Tmap_traits<RBX::Name const *,boost::shared_ptr<RBX::Instance>,std::less<RBX::Name const *>,std::allocator<std::pair<RBX::Name const * const,boost::shared_ptr<RBX::Instance> > >,0> >::_Node *v2; // eax

  RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&char const * const RBX::sServiceProvider>::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&char const * const RBX::sServiceProvider>(this);
  this->RBX::Notifier<RBX::ServiceProvider,RBX::Closing>::listeners._Myfirst = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::Closing>::listeners._Mylast = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::Closing>::listeners._Myend = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::Closing>::raiseRange = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceAdded>::listeners._Myfirst = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceAdded>::listeners._Mylast = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceAdded>::listeners._Myend = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceAdded>::raiseRange = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceRemoving>::listeners._Myfirst = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceRemoving>::listeners._Mylast = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceRemoving>::listeners._Myend = 0;
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceRemoving>::raiseRange = 0;
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::GuidItem<RBX::Instance>::__vftable = (RBX::ServiceProvider_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::GuidItem<RBX::Instance>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::AbstractFactoryProduct<RBX::Instance>::RBX::Creatable<RBX::Instance>::RBX::Object::__vftable = (RBX::AbstractFactoryProduct<RBX::Instance>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::AbstractFactoryProduct<RBX::Instance>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Reflection::Described<RBX::Instance,&RBX::sInstance,RBX::Reflection::DescribedBase>::RBX::Reflection::DescribedBase::RBX::Reflection::SignalSource::__vftable = (RBX::Reflection::Described<RBX::Instance,&RBX::sInstance,RBX::Reflection::DescribedBase>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Reflection::Described<RBX::Instance,&char const * const RBX::sInstance,RBX::Reflection::DescribedBase>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Debugable::__vftable = (RBX::Debugable_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Debugable'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Notifier<RBX::Instance,RBX::ChildAdded>::__vftable = (RBX::Notifier<RBX::Instance,RBX::ChildAdded>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::Instance,RBX::ChildAdded>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Notifier<RBX::Instance,RBX::ChildRemoved>::__vftable = (RBX::Notifier<RBX::Instance,RBX::ChildRemoved>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::Instance,RBX::ChildRemoved>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Notifier<RBX::Instance,RBX::DescendentAdded>::__vftable = (RBX::Notifier<RBX::Instance,RBX::DescendentAdded>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::Instance,RBX::DescendentAdded>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Notifier<RBX::Instance,RBX::DescendentRemoving>::__vftable = (RBX::Notifier<RBX::Instance,RBX::DescendentRemoving>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::Instance,RBX::DescendentRemoving>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Notifier<RBX::Instance,RBX::AncestorChanged>::__vftable = (RBX::Notifier<RBX::Instance,RBX::AncestorChanged>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::Instance,RBX::AncestorChanged>'};
  this->RBX::DescribedNonCreatable<RBX::ServiceProvider,RBX::Instance,&RBX::sServiceProvider>::RBX::Reflection::Described<RBX::ServiceProvider,&RBX::sServiceProvider,RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider> >::RBX::NonFactoryProduct<RBX::Instance,&RBX::sServiceProvider>::RBX::Instance::RBX::Notifier<RBX::Instance,RBX::PropertyChanged>::__vftable = (RBX::Notifier<RBX::Instance,RBX::PropertyChanged>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::Instance,RBX::PropertyChanged>'};
  this->RBX::Notifier<RBX::ServiceProvider,RBX::Closing>::__vftable = (RBX::Notifier<RBX::ServiceProvider,RBX::Closing>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::ServiceProvider,RBX::Closing>'};
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceAdded>::__vftable = (RBX::Notifier<RBX::ServiceProvider,RBX::ServiceAdded>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::ServiceProvider,RBX::ServiceAdded>'};
  this->RBX::Notifier<RBX::ServiceProvider,RBX::ServiceRemoving>::__vftable = (RBX::Notifier<RBX::ServiceProvider,RBX::ServiceRemoving>_vtbl *)&RBX::ServiceProvider::`vftable'{for `RBX::Notifier<RBX::ServiceProvider,RBX::ServiceRemoving>'};
  this->serviceArray._Myfirst = 0;
  this->serviceArray._Mylast = 0;
  this->serviceArray._Myend = 0;
  v2 = (std::_Tree_nod<std::_Tmap_traits<RBX::Name const *,boost::shared_ptr<RBX::Instance>,std::less<RBX::Name const *>,std::allocator<std::pair<RBX::Name const * const,boost::shared_ptr<RBX::Instance> > >,0> >::_Node *)std::_Tree<std::_Tmap_traits<enum RBX::SoundType,boost::shared_ptr<RBX::Soundscape::SoundChannel>,std::less<enum RBX::SoundType>,std::allocator<std::pair<enum RBX::SoundType const,boost::shared_ptr<RBX::Soundscape::SoundChannel>>>,0>>::_Buynode((std::_Tree<std::_Tmap_traits<RBX::Reflection::PropertyDescriptor const *,boost::shared_ptr<RBX::Network::SharedStringDictionary>,std::less<RBX::Reflection::PropertyDescriptor const *>,std::allocator<std::pair<RBX::Reflection::PropertyDescriptor const * const,boost::shared_ptr<RBX::Network::SharedStringDictionary> > >,0> > *)&this->serviceMap);
  this->serviceMap._Myhead = v2;
  v2->_Isnil = 1;
  this->serviceMap._Myhead->_Parent = this->serviceMap._Myhead;
  this->serviceMap._Myhead->_Left = this->serviceMap._Myhead;
  this->serviceMap._Myhead->_Right = this->serviceMap._Myhead;
  this->serviceMap._Mysize = 0;
}
